[
    {
        "pass@1": 0.4254658385093168,
        "pass@5": 0.42857142857142855,
        "pass@10": 0.42857142857142855,
        "detail": {
            "pass@1": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 1.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 1.0,
                "18": 1.0,
                "19": 0.0,
                "20": 1.0,
                "21": 1.0,
                "22": 0.0,
                "23": 1.0,
                "24": 1.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 0.0,
                "30": 0.0,
                "31": 0.0,
                "32": 0.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.0,
                "36": 0.0,
                "37": 1.0,
                "38": 0.0,
                "39": 1.0,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 0.0,
                "44": 1.0,
                "45": 1.0,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 1.0,
                "50": 0.0,
                "51": 0.0,
                "52": 0.0,
                "53": 0.0,
                "54": 1.0,
                "55": 0.0,
                "56": 1.0,
                "57": 1.0,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 1.0,
                "64": 1.0,
                "65": 0.0,
                "66": 1.0,
                "67": 0.0,
                "68": 0.0,
                "69": 0.0,
                "70": 0.0,
                "71": 0.0,
                "72": 0.0,
                "73": 0.0,
                "74": 0.0,
                "75": 0.0,
                "76": 1.0,
                "77": 1.0,
                "78": 1.0,
                "79": 0.0,
                "80": 1.0,
                "81": 1.0,
                "82": 1.0,
                "83": 0.0,
                "84": 1.0,
                "85": 0.0,
                "86": 1.0,
                "87": 1.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.7999999999999999,
                "91": 1.0,
                "92": 1.0,
                "93": 0.0,
                "94": 0.0,
                "95": 1.0,
                "96": 1.0,
                "97": 1.0,
                "98": 1.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 0.0,
                "103": 1.0,
                "104": 0.0,
                "105": 0.0,
                "106": 0.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.0,
                "112": 1.0,
                "113": 0.0,
                "114": 0.0,
                "115": 0.0,
                "116": 1.0,
                "117": 0.0,
                "118": 1.0,
                "119": 0.0,
                "120": 1.0,
                "121": 0.0,
                "122": 0.0,
                "123": 0.0,
                "124": 0.0,
                "125": 0.0,
                "126": 1.0,
                "127": 1.0,
                "128": 0.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 1.0,
                "133": 0.0,
                "134": 0.9,
                "135": 0.0,
                "136": 1.0,
                "137": 1.0,
                "138": 1.0,
                "139": 1.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 0.7999999999999999,
                "144": 1.0,
                "145": 1.0,
                "146": 0.0,
                "147": 0.0,
                "148": 1.0,
                "149": 0.0,
                "150": 1.0,
                "151": 1.0,
                "152": 0.0,
                "153": 0.0,
                "154": 0.0,
                "155": 1.0,
                "156": 1.0,
                "157": 1.0,
                "158": 1.0,
                "159": 0.0,
                "160": 1.0
            },
            "pass@5": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 1.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 1.0,
                "18": 1.0,
                "19": 0.0,
                "20": 1.0,
                "21": 1.0,
                "22": 0.0,
                "23": 1.0,
                "24": 1.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 0.0,
                "30": 0.0,
                "31": 0.0,
                "32": 0.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.0,
                "36": 0.0,
                "37": 1.0,
                "38": 0.0,
                "39": 1.0,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 0.0,
                "44": 1.0,
                "45": 1.0,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 1.0,
                "50": 0.0,
                "51": 0.0,
                "52": 0.0,
                "53": 0.0,
                "54": 1.0,
                "55": 0.0,
                "56": 1.0,
                "57": 1.0,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 1.0,
                "64": 1.0,
                "65": 0.0,
                "66": 1.0,
                "67": 0.0,
                "68": 0.0,
                "69": 0.0,
                "70": 0.0,
                "71": 0.0,
                "72": 0.0,
                "73": 0.0,
                "74": 0.0,
                "75": 0.0,
                "76": 1.0,
                "77": 1.0,
                "78": 1.0,
                "79": 0.0,
                "80": 1.0,
                "81": 1.0,
                "82": 1.0,
                "83": 0.0,
                "84": 1.0,
                "85": 0.0,
                "86": 1.0,
                "87": 1.0,
                "88": 0.0,
                "89": 0.0,
                "90": 1.0,
                "91": 1.0,
                "92": 1.0,
                "93": 0.0,
                "94": 0.0,
                "95": 1.0,
                "96": 1.0,
                "97": 1.0,
                "98": 1.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 0.0,
                "103": 1.0,
                "104": 0.0,
                "105": 0.0,
                "106": 0.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.0,
                "112": 1.0,
                "113": 0.0,
                "114": 0.0,
                "115": 0.0,
                "116": 1.0,
                "117": 0.0,
                "118": 1.0,
                "119": 0.0,
                "120": 1.0,
                "121": 0.0,
                "122": 0.0,
                "123": 0.0,
                "124": 0.0,
                "125": 0.0,
                "126": 1.0,
                "127": 1.0,
                "128": 0.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 1.0,
                "133": 0.0,
                "134": 1.0,
                "135": 0.0,
                "136": 1.0,
                "137": 1.0,
                "138": 1.0,
                "139": 1.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 1.0,
                "146": 0.0,
                "147": 0.0,
                "148": 1.0,
                "149": 0.0,
                "150": 1.0,
                "151": 1.0,
                "152": 0.0,
                "153": 0.0,
                "154": 0.0,
                "155": 1.0,
                "156": 1.0,
                "157": 1.0,
                "158": 1.0,
                "159": 0.0,
                "160": 1.0
            },
            "pass@10": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 1.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 1.0,
                "8": 1.0,
                "9": 1.0,
                "10": 1.0,
                "11": 1.0,
                "12": 1.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 1.0,
                "18": 1.0,
                "19": 0.0,
                "20": 1.0,
                "21": 1.0,
                "22": 0.0,
                "23": 1.0,
                "24": 1.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 0.0,
                "30": 0.0,
                "31": 0.0,
                "32": 0.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.0,
                "36": 0.0,
                "37": 1.0,
                "38": 0.0,
                "39": 1.0,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 0.0,
                "44": 1.0,
                "45": 1.0,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 1.0,
                "50": 0.0,
                "51": 0.0,
                "52": 0.0,
                "53": 0.0,
                "54": 1.0,
                "55": 0.0,
                "56": 1.0,
                "57": 1.0,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 1.0,
                "64": 1.0,
                "65": 0.0,
                "66": 1.0,
                "67": 0.0,
                "68": 0.0,
                "69": 0.0,
                "70": 0.0,
                "71": 0.0,
                "72": 0.0,
                "73": 0.0,
                "74": 0.0,
                "75": 0.0,
                "76": 1.0,
                "77": 1.0,
                "78": 1.0,
                "79": 0.0,
                "80": 1.0,
                "81": 1.0,
                "82": 1.0,
                "83": 0.0,
                "84": 1.0,
                "85": 0.0,
                "86": 1.0,
                "87": 1.0,
                "88": 0.0,
                "89": 0.0,
                "90": 1.0,
                "91": 1.0,
                "92": 1.0,
                "93": 0.0,
                "94": 0.0,
                "95": 1.0,
                "96": 1.0,
                "97": 1.0,
                "98": 1.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 0.0,
                "103": 1.0,
                "104": 0.0,
                "105": 0.0,
                "106": 0.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.0,
                "112": 1.0,
                "113": 0.0,
                "114": 0.0,
                "115": 0.0,
                "116": 1.0,
                "117": 0.0,
                "118": 1.0,
                "119": 0.0,
                "120": 1.0,
                "121": 0.0,
                "122": 0.0,
                "123": 0.0,
                "124": 0.0,
                "125": 0.0,
                "126": 1.0,
                "127": 1.0,
                "128": 0.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 1.0,
                "133": 0.0,
                "134": 1.0,
                "135": 0.0,
                "136": 1.0,
                "137": 1.0,
                "138": 1.0,
                "139": 1.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 1.0,
                "146": 0.0,
                "147": 0.0,
                "148": 1.0,
                "149": 0.0,
                "150": 1.0,
                "151": 1.0,
                "152": 0.0,
                "153": 0.0,
                "154": 0.0,
                "155": 1.0,
                "156": 1.0,
                "157": 1.0,
                "158": 1.0,
                "159": 0.0,
                "160": 1.0
            }
        }
    },
    {
        "0": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "1": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "2": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "3": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "4": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "5": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "6": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "7": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "8": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "9": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "10": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "11": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "12": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "13": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "14": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "15": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "16": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "17": [
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ]
        ],
        "18": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "19": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "20": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "21": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ],
        "22": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "23": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "24": [
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ]
        ],
        "25": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "26": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "27": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "28": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "29": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "30": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "31": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "32": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "33": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "34": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "35": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "36": [
            [
                true,
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                -4
            ]
        ],
        "37": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "38": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "39": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "40": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "41": [
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "42": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "43": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "44": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "45": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "46": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "47": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "48": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "49": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "50": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "51": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "52": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "53": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "54": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "55": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "56": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "57": [
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ]
        ],
        "58": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "59": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "60": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "61": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "62": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "63": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "64": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "65": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "66": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "67": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "68": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "69": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "70": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "71": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "72": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "73": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "74": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "75": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "76": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "77": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "78": [
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ]
        ],
        "79": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "80": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "81": [
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ]
        ],
        "82": [
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ]
        ],
        "83": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "84": [
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ]
        ],
        "85": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "86": [
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "87": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "88": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "89": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "90": [
            [
                true
            ],
            [
                true
            ],
            [
                false
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                false
            ],
            [
                true
            ]
        ],
        "91": [
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ],
            [
                true,
                true
            ]
        ],
        "92": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "93": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "94": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "95": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "96": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "97": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "98": [
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ],
            [
                true,
                true,
                true
            ]
        ],
        "99": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "100": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "101": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "102": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "103": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "104": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "105": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "106": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "107": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "108": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "109": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "110": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "111": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "112": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "113": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "114": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "115": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "116": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "117": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "118": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "119": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "120": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "121": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "122": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "123": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "124": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "125": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "126": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "127": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "128": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "129": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "130": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "131": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "132": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "133": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "134": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "135": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "136": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ],
        "137": [
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ],
            [
                true
            ]
        ],
        "138": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "139": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "140": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "141": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "142": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "143": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "144": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "145": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "146": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "147": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "148": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "149": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "150": [
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true
            ]
        ],
        "151": [
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "152": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "153": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "154": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "155": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "156": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ],
        "157": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "158": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ],
        "159": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "160": [
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true
            ]
        ]
    },
    [
        [
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.has_close_elements() missing 1 required positional argument: 'threshold'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3]]\", \"expected\": \"True\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 7.867813110351562e-06}",
            "{\"execution time\": 6.9141387939453125e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}",
            "{\"error\": \"TypeError(\\\"Solution.choose_num() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[12, 15]]\", \"expected\": \"14\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}",
            "{\"error\": \"TypeError(\\\"Solution.rounded_avg() missing 1 required positional argument: 'm'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 5]]\", \"expected\": \"0b11\"}"
        ],
        [
            "{\"execution time\": 2.0503997802734375e-05}",
            "{\"execution time\": 2.0742416381835938e-05}",
            "{\"execution time\": 2.002716064453125e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 1.9550323486328125e-05}",
            "{\"execution time\": 1.9788742065429688e-05}",
            "{\"execution time\": 1.9550323486328125e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 2.1219253540039062e-05}"
        ],
        [
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 8.821487426757812e-06}"
        ],
        [
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 7.62939453125e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 7.867813110351562e-06}"
        ],
        [
            "{\"execution time\": 3.933906555175781e-05}",
            "{\"execution time\": 3.838539123535156e-05}",
            "{\"execution time\": 3.886222839355469e-05}",
            "{\"execution time\": 4.1484832763671875e-05}",
            "{\"execution time\": 3.886222839355469e-05}",
            "{\"execution time\": 3.814697265625e-05}",
            "{\"execution time\": 4.00543212890625e-05}",
            "{\"execution time\": 4.124641418457031e-05}",
            "{\"execution time\": 3.933906555175781e-05}",
            "{\"execution time\": 4.0531158447265625e-05}"
        ],
        [
            "{\"execution time\": 2.4318695068359375e-05}",
            "{\"execution time\": 2.3365020751953125e-05}",
            "{\"execution time\": 2.2411346435546875e-05}",
            "{\"execution time\": 2.0742416381835938e-05}",
            "{\"execution time\": 2.3126602172851562e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 2.1219253540039062e-05}",
            "{\"execution time\": 2.3603439331054688e-05}",
            "{\"execution time\": 2.2649765014648438e-05}"
        ],
        [
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 5.9604644775390625e-06}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}",
            "{\"error\": \"TypeError(\\\"Solution.string_xor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['111000', '101010']]\", \"expected\": \"010010\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}",
            "{\"error\": \"TypeError(\\\"Solution.exchange() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4], [1, 2, 3, 4]]]\", \"expected\": \"YES\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}",
            "{\"error\": \"TypeError(\\\"Solution.reverse_delete() missing 1 required positional argument: 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abcde', 'ae']]\", \"expected\": \"['bcd', False]\"}"
        ],
        [
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 1.0728836059570312e-05}"
        ],
        [
            "{\"execution time\": 1.2874603271484375e-05}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.3113021850585938e-05}",
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"execution time\": 1.2874603271484375e-05}",
            "{\"execution time\": 1.2159347534179688e-05}",
            "{\"execution time\": 1.3828277587890625e-05}",
            "{\"execution time\": 1.4781951904296875e-05}",
            "{\"execution time\": 1.4543533325195312e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"Solution.max_fill() missing 1 required positional argument: 'capacity'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1]]\", \"expected\": \"6\"}"
        ],
        [
            "{\"execution time\": 2.2411346435546875e-05}",
            "{\"execution time\": 2.3365020751953125e-05}",
            "{\"execution time\": 2.002716064453125e-05}",
            "{\"execution time\": 2.3603439331054688e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.3365020751953125e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.2411346435546875e-05}",
            "{\"execution time\": 2.2411346435546875e-05}"
        ],
        [
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.4781951904296875e-05}",
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"execution time\": 1.4781951904296875e-05}",
            "{\"execution time\": 1.4543533325195312e-05}"
        ],
        [
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 2.86102294921875e-06}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}",
            "{\"error\": \"TypeError(\\\"Solution.maximum() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[-3, -4, 5], 3]]\", \"expected\": \"[-4, -3, 5]\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 8, 7, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}",
            "{\"error\": \"TypeError(\\\"Solution.add_elements() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, -2, -3, 41, 57, 76, 87, 88, 99], 3]]\", \"expected\": \"-4\"}"
        ],
        [
            "{\"execution time\": 7.867813110351562e-06}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 1.049041748046875e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 2 (char 1)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersection() missing 1 required positional argument: 'interval2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [2, 3]]]\", \"expected\": \"NO\"}"
        ],
        [
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 6.198883056640625e-06}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}",
            "{\"error\": \"TypeError(\\\"Solution.minPath() missing 1 required positional argument: 'k'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3]]\", \"expected\": \"[1, 2, 1]\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}",
            "{\"error\": \"TypeError(\\\"Solution.greatest_common_divisor() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 7]]\", \"expected\": \"1\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0]\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +: 'int' and 'NoneType'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[3]\", \"expected\": \"[1, 3, 2.0, 8.0]\"}",
            "{\"output\": \"[1, 3, 2, 8, 3, 7]\", \"inputs\": \"[5]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0, 15.0]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0]\"}",
            "{\"output\": \"[1, 3, 2, 8, 3, 7]\", \"inputs\": \"[5]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0, 15.0]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 2, 8, 3, 7]\", \"inputs\": \"[5]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0, 15.0]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0]\"}",
            "{\"output\": \"[1, 3, 2, 8, 3, 7]\", \"inputs\": \"[5]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0, 15.0]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4]\", \"expected\": \"[1, 3, 2.0, 8.0, 3.0]\"}"
        ],
        [
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.1205673217773438e-05}",
            "{\"execution time\": 1.2636184692382812e-05}",
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 1.0251998901367188e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Extra data: line 1 column 3 (char 2)\"}"
        ],
        [
            "{\"execution time\": 3.62396240234375e-05}",
            "{\"execution time\": 3.218650817871094e-05}",
            "{\"execution time\": 3.24249267578125e-05}",
            "{\"execution time\": 3.0517578125e-05}",
            "{\"execution time\": 3.218650817871094e-05}",
            "{\"execution time\": 3.0517578125e-05}",
            "{\"execution time\": 3.123283386230469e-05}",
            "{\"execution time\": 3.170967102050781e-05}",
            "{\"execution time\": 3.0517578125e-05}",
            "{\"execution time\": 3.0040740966796875e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[4, 8, 5, 7, 3]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[4, 8, 5, 7, 3]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 3, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[4, 8, 5, 7, 3]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 3, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 3, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 3, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 3, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 3, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 3, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.5735626220703125e-05}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"execution time\": 1.52587890625e-05}",
            "{\"execution time\": 1.5735626220703125e-05}",
            "{\"execution time\": 1.52587890625e-05}",
            "{\"execution time\": 1.5497207641601562e-05}",
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"execution time\": 1.6450881958007812e-05}",
            "{\"execution time\": 1.5735626220703125e-05}",
            "{\"execution time\": 1.3589859008789062e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare_one() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2]]\", \"expected\": \"2\"}"
        ],
        [
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 2.6226043701171875e-06}"
        ],
        [
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 4.76837158203125e-06}",
            "{\"execution time\": 7.867813110351562e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.7220458984375e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 2.3126602172851562e-05}",
            "{\"execution time\": 2.2411346435546875e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.3126602172851562e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.2411346435546875e-05}",
            "{\"execution time\": 2.3126602172851562e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.5272369384765625e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.simplify() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['1/5', '5/1']]\", \"expected\": \"True\"}"
        ],
        [
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, -1, 11, -11, -12]\", \"inputs\": \"[[1, 11, -1, -11, -12]]\", \"expected\": \"[-1, -11, 1, -12, 11]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[15, -73, 14, -15]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.1682510375976562e-05}",
            "{\"execution time\": 5.0067901611328125e-06}",
            "{\"execution time\": 4.76837158203125e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 1.1205673217773438e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.bf() missing 1 required positional argument: 'planet2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Earth', 'Earth']]\", \"expected\": \"[]\"}"
        ],
        [
            "{\"execution time\": 1.0728836059570312e-05}",
            "{\"execution time\": 1.1205673217773438e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 9.775161743164062e-06}"
        ],
        [
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 7.867813110351562e-06}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 9.298324584960938e-06}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}",
            "{\"error\": \"TypeError(\\\"Solution.x_or_y() missing 2 required positional arguments: 'x' and 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[7, 34, 12]]\", \"expected\": \"34\"}"
        ],
        [
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.245208740234375e-06}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}",
            "{\"error\": \"TypeError(\\\"Solution.compare() missing 1 required positional argument: 'guess'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]]]\", \"expected\": \"[0, 0, 0, 0, 3, 3]\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}",
            "{\"error\": \"TypeError(\\\"Solution.Strongest_Extension() missing 1 required positional argument: 'extensions'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['Watashi', ['tEN', 'niNE', 'eIGHt8OKe']]]\", \"expected\": \"Watashi.eIGHt8OKe\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}",
            "{\"error\": \"TypeError(\\\"Solution.cycpattern_check() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['xyzw', 'xyw']]\", \"expected\": \"False\"}"
        ],
        [
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.1682510375976562e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.1205673217773438e-05}",
            "{\"execution time\": 1.33514404296875e-05}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"execution time\": 1.2636184692382812e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.1920928955078125e-05}"
        ],
        [
            "{\"execution time\": 1.5735626220703125e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.5497207641601562e-05}",
            "{\"execution time\": 1.621246337890625e-05}",
            "{\"execution time\": 1.52587890625e-05}",
            "{\"execution time\": 1.5020370483398438e-05}",
            "{\"execution time\": 1.5497207641601562e-05}",
            "{\"execution time\": 1.5974044799804688e-05}",
            "{\"execution time\": 1.5497207641601562e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.right_angle_triangle() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"True\"}"
        ],
        [
            "{\"execution time\": 1.8358230590820312e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"execution time\": 1.811981201171875e-05}",
            "{\"execution time\": 1.9311904907226562e-05}",
            "{\"execution time\": 1.8596649169921875e-05}",
            "{\"execution time\": 2.0503997802734375e-05}",
            "{\"execution time\": 2.1696090698242188e-05}",
            "{\"execution time\": 1.8835067749023438e-05}",
            "{\"execution time\": 2.0742416381835938e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}",
            "{\"error\": \"TypeError(\\\"Solution.eat() missing 2 required positional arguments: 'need' and 'remaining'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 6, 10]]\", \"expected\": \"[11, 4]\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}",
            "{\"error\": \"TypeError(\\\"Solution.do_algebra() missing 1 required positional argument: 'operand'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[['**', '*', '+'], [2, 3, 4, 5]]]\", \"expected\": \"37\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}",
            "{\"error\": \"TypeError(\\\"Solution.generate_integers() missing 1 required positional argument: 'b'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 10]]\", \"expected\": \"[2, 4, 6, 8]\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.how_many_times() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['', 'x']]\", \"expected\": \"0\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.2636184692382812e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.1205673217773438e-05}",
            "{\"execution time\": 1.239776611328125e-05}",
            "{\"execution time\": 1.2636184692382812e-05}",
            "{\"execution time\": 1.239776611328125e-05}",
            "{\"execution time\": 1.2874603271484375e-05}",
            "{\"execution time\": 1.239776611328125e-05}"
        ],
        [
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 8.821487426757812e-06}"
        ],
        [
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 2.384185791015625e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 6.4373016357421875e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 4.76837158203125e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.0067901611328125e-06}",
            "{\"execution time\": 4.291534423828125e-06}",
            "{\"execution time\": 5.0067901611328125e-06}",
            "{\"execution time\": 5.245208740234375e-06}"
        ],
        [
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.5762786865234375e-06}"
        ],
        [
            "{\"execution time\": 4.0531158447265625e-05}",
            "{\"execution time\": 4.315376281738281e-05}",
            "{\"execution time\": 4.482269287109375e-05}",
            "{\"execution time\": 4.220008850097656e-05}",
            "{\"execution time\": 4.0531158447265625e-05}",
            "{\"execution time\": 4.2438507080078125e-05}",
            "{\"execution time\": 4.100799560546875e-05}",
            "{\"execution time\": 4.839897155761719e-05}",
            "{\"execution time\": 4.267692565917969e-05}",
            "{\"execution time\": 3.838539123535156e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 2.384185791015625e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 2.384185791015625e-06}",
            "{\"execution time\": 2.1457672119140625e-06}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_prefix() missing 1 required positional argument: 'prefix'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}"
        ],
        [
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 4.291534423828125e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}"
        ],
        [
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 4.291534423828125e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.5762786865234375e-06}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[6]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, -5, 2, -3, 3, 5, 0, 123, 9, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-5, 3, -5, 2, -3, 3, 0, 0, 123, 1, -10]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 3.8623809814453125e-05}",
            "{\"execution time\": 3.695487976074219e-05}",
            "{\"output\": \"[0, 2, 3, 3, 3, 5, 5, 9, 123]\", \"inputs\": \"[[5, 3, 5, 2, 3, 3, 9, 0, 123]]\", \"expected\": \"[0, 2, 3, 5, 9, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.553794860839844e-05}",
            "{\"execution time\": 3.719329833984375e-05}",
            "{\"execution time\": 3.933906555175781e-05}",
            "{\"execution time\": 3.8623809814453125e-05}",
            "{\"execution time\": 3.719329833984375e-05}",
            "{\"output\": \"[0, 2, 3, 3, 3, 5, 5, 9, 123]\", \"inputs\": \"[[5, 3, 5, 2, 3, 3, 9, 0, 123]]\", \"expected\": \"[0, 2, 3, 5, 9, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 3.910064697265625e-05}"
        ],
        [
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 2.6226043701171875e-06}"
        ],
        [
            "{\"execution time\": 0.00733184814453125}",
            "{\"execution time\": 0.007093191146850586}",
            "{\"execution time\": 0.007113933563232422}",
            "{\"execution time\": 0.007081031799316406}",
            "{\"execution time\": 0.006821870803833008}",
            "{\"execution time\": 0.0068225860595703125}",
            "{\"execution time\": 0.007112026214599609}",
            "{\"execution time\": 0.00708770751953125}",
            "{\"execution time\": 0.007127523422241211}",
            "{\"execution time\": 0.007207632064819336}"
        ],
        [
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 0, -5, 1, -3, 2, 9, 3, 123, 3, -10]\", \"inputs\": \"[[5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]]\", \"expected\": \"[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 0.0004696846008300781}",
            "{\"execution time\": 0.0004706382751464844}",
            "{\"execution time\": 0.0004680156707763672}",
            "{\"execution time\": 0.00041484832763671875}",
            "{\"execution time\": 0.00041294097900390625}",
            "{\"execution time\": 0.00040984153747558594}",
            "{\"execution time\": 0.0004246234893798828}",
            "{\"execution time\": 0.00041413307189941406}",
            "{\"execution time\": 0.0003924369812011719}",
            "{\"execution time\": 0.0003902912139892578}"
        ],
        [
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.2159347534179688e-05}",
            "{\"execution time\": 1.239776611328125e-05}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"execution time\": 1.33514404296875e-05}",
            "{\"execution time\": 1.239776611328125e-05}",
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"execution time\": 1.2159347534179688e-05}",
            "{\"execution time\": 1.33514404296875e-05}"
        ],
        [
            "{\"execution time\": 1.6689300537109375e-06}",
            "{\"execution time\": 1.6689300537109375e-06}",
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 1.6689300537109375e-06}",
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 1.6689300537109375e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 1.9073486328125e-06}"
        ],
        [
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 2.384185791015625e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 4.0531158447265625e-06}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 5, 0]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}",
            "{\"error\": \"TypeError(\\\"Solution.change_base() missing 1 required positional argument: 'base'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 3]]\", \"expected\": \"22\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 1 required positional argument: 'h'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3]]\", \"expected\": \"7.5\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[5]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 1.6450881958007812e-05}",
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"execution time\": 1.71661376953125e-05}",
            "{\"execution time\": 1.621246337890625e-05}",
            "{\"execution time\": 1.5974044799804688e-05}",
            "{\"execution time\": 1.6689300537109375e-05}",
            "{\"execution time\": 1.7404556274414062e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"Solution.modp() missing 1 required positional argument: 'p'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 5]]\", \"expected\": \"3\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.intersperse() missing 1 required positional argument: 'delimeter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 7]]\", \"expected\": \"[]\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.below_threshold() missing 1 required positional argument: 't'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2, 4, 10], 100]]\", \"expected\": \"True\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"Solution.add() missing 1 required positional argument: 'y'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 0]]\", \"expected\": \"0\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.same_chars() missing 1 required positional argument: 's1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['eabcdzzzz', 'dddzzzzzzzddeddabc']]\", \"expected\": \"True\"}"
        ],
        [
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 5.7220458984375e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2, 4, 10]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}",
            "{\"error\": \"TypeError(\\\"Solution.common() missing 1 required positional argument: 'l2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]]]\", \"expected\": \"[1, 5, 653]\"}"
        ],
        [
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 7.152557373046875e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 2.6226043701171875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 3.0994415283203125e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 6.9141387939453125e-06}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}",
            "{\"error\": \"TypeError(\\\"Solution.circular_shift() missing 1 required positional argument: 'shift'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[100, 2]]\", \"expected\": \"001\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"Solution.fruit_distribution() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['5 apples and 6 oranges', 19]]\", \"expected\": \"8\"}"
        ],
        [
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 1.239776611328125e-05}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 1.3828277587890625e-05}",
            "{\"execution time\": 1.2874603271484375e-05}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 7.62939453125e-06}",
            "{\"execution time\": 7.152557373046875e-06}"
        ],
        [
            "{\"execution time\": 9.918212890625e-05}",
            "{\"execution time\": 0.00022029876708984375}",
            "{\"execution time\": 0.00010848045349121094}",
            "{\"execution time\": 8.845329284667969e-05}",
            "{\"execution time\": 0.00010204315185546875}",
            "{\"execution time\": 9.72747802734375e-05}",
            "{\"execution time\": 9.679794311523438e-05}",
            "{\"execution time\": 0.00011372566223144531}",
            "{\"execution time\": 9.799003601074219e-05}",
            "{\"execution time\": 0.00010061264038085938}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.filter_by_substring() missing 1 required positional argument: 'substring'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], 'john']]\", \"expected\": \"[]\"}"
        ],
        [
            "{\"execution time\": 1.5020370483398438e-05}",
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"execution time\": 1.5497207641601562e-05}",
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"execution time\": 1.3113021850585938e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.4781951904296875e-05}",
            "{\"execution time\": 1.4781951904296875e-05}",
            "{\"execution time\": 1.4543533325195312e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}",
            "{\"error\": \"TypeError(\\\"Solution.triangle_area() missing 2 required positional arguments: 'b' and 'c'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 4, 5]]\", \"expected\": \"6.0\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.will_it_fly() missing 1 required positional argument: 'w'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[3, 2, 3], 9]]\", \"expected\": \"True\"}"
        ],
        [
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 7.62939453125e-06}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 6.9141387939453125e-06}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}",
            "{\"error\": \"TypeError(\\\"Solution.total_match() missing 1 required positional argument: 'lst2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], []]]\", \"expected\": \"[]\"}"
        ],
        [
            "{\"execution time\": 0.0012423992156982422}",
            "{\"execution time\": 0.00011849403381347656}",
            "{\"execution time\": 0.0012063980102539062}",
            "{\"execution time\": 0.0013184547424316406}",
            "{\"output\": \"False\", \"inputs\": \"[125]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.00012159347534179688}",
            "{\"execution time\": 0.00011181831359863281}",
            "{\"execution time\": 0.001249551773071289}",
            "{\"execution time\": 0.0012469291687011719}",
            "{\"execution time\": 0.00011467933654785156}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.is_simple_power() missing 1 required positional argument: 'n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[16, 2]]\", \"expected\": \"True\"}"
        ],
        [
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}"
        ],
        [
            "{\"execution time\": 1.9073486328125e-06}",
            "{\"execution time\": 4.291534423828125e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 4.291534423828125e-06}",
            "{\"execution time\": 2.1457672119140625e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 4.0531158447265625e-06}"
        ],
        [
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 4.76837158203125e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 4.0531158447265625e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 4.0531158447265625e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 4.0531158447265625e-06}",
            "{\"execution time\": 3.5762786865234375e-06}"
        ],
        [
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.814697265625e-06}",
            "{\"execution time\": 3.5762786865234375e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.337860107421875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 3.0994415283203125e-06}",
            "{\"execution time\": 2.86102294921875e-06}",
            "{\"execution time\": 3.0994415283203125e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['A+', 'B+', 'C', 'C+', 'A-']\", \"inputs\": \"[[4.0, 3, 1.7, 2, 3.5]]\", \"expected\": \"['A+', 'B', 'C-', 'C', 'A-']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 1.3113021850585938e-05}",
            "{\"output\": \"None\", \"inputs\": \"[1]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[1]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 7.3909759521484375e-06}"
        ],
        [
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 1.0728836059570312e-05}",
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 1.33514404296875e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 1.0013580322265625e-05}",
            "{\"execution time\": 1.0728836059570312e-05}"
        ],
        [
            "{\"execution time\": 5.7220458984375e-06}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.9141387939453125e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 6.67572021484375e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 5.7220458984375e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}",
            "{\"error\": \"TypeError(\\\"Solution.get_row() missing 1 required positional argument: 'x'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1]]\", \"expected\": \"[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\"}"
        ],
        [
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 7.867813110351562e-06}",
            "{\"execution time\": 7.62939453125e-06}",
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 8.58306884765625e-06}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 7.867813110351562e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 8.344650268554688e-06}",
            "{\"execution time\": 7.62939453125e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 7.62939453125e-06}",
            "{\"execution time\": 1.0251998901367188e-05}"
        ],
        [
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 8.58306884765625e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 9.298324584960938e-06}",
            "{\"execution time\": 8.821487426757812e-06}",
            "{\"execution time\": 1.239776611328125e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError(\\\"Solution.any_int() missing 2 required positional arguments: 'y' and 'z'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1]]\", \"expected\": \"True\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 5.602836608886719e-05}",
            "{\"execution time\": 4.5299530029296875e-05}",
            "{\"execution time\": 9.226799011230469e-05}",
            "{\"execution time\": 5.4836273193359375e-05}",
            "{\"execution time\": 3.147125244140625e-05}",
            "{\"execution time\": 3.504753112792969e-05}",
            "{\"execution time\": 3.0994415283203125e-05}",
            "{\"execution time\": 5.984306335449219e-05}",
            "{\"execution time\": 3.6716461181640625e-05}",
            "{\"execution time\": 0.00011587142944335938}"
        ],
        [
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}"
        ],
        [
            "{\"execution time\": 2.4557113647460938e-05}",
            "{\"execution time\": 2.4318695068359375e-05}",
            "{\"execution time\": 2.5510787963867188e-05}",
            "{\"execution time\": 2.384185791015625e-05}",
            "{\"execution time\": 2.6464462280273438e-05}",
            "{\"execution time\": 2.4080276489257812e-05}",
            "{\"execution time\": 2.4557113647460938e-05}",
            "{\"execution time\": 2.4318695068359375e-05}",
            "{\"execution time\": 2.6464462280273438e-05}",
            "{\"execution time\": 2.5510787963867188e-05}"
        ],
        [
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}",
            "{\"execution time\": 0}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Expecting value: line 1 column 1 (char 0)\"}"
        ],
        [
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 7.62939453125e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 6.4373016357421875e-06}",
            "{\"execution time\": 7.152557373046875e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 7.3909759521484375e-06}",
            "{\"execution time\": 6.198883056640625e-06}"
        ]
    ]
]